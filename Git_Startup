Git Info:
---------

Installing Git using Yum 
------------------------

[root@irontux ~]# yum install git -y

Updated:
  git.x86_64 0:1.8.3.1-12.el7_4

Dependency Package:
  perl-Git.noarch 0:1.8.3.1-12.el7_4
  
[root@irontux ~]# git --version
git version 1.8.3.1

Configuring Git: 
----------------

[root@irontux ~]# git config --global user.name "root"
[root@irontux ~]# git config --global user.email "root@localhost"
[root@irontux ~]# ls -lart .gitconfig
-rw-r--r--. 1 root root 44 Oct 14 19:54 .gitconfig
[root@irontux ~]# cat .gitconfig
[user]
        name = root
        email = root@localhost
[root@irontux ~]#

[root@irontux etc]# git config --list
core.editor=/usr/bin/vim
user.name=root
user.email=root@localhost
[root@irontux etc]#

[root@irontux etc]# ls -lrt /etc/gitconfig
-rw-r--r--. 1 root root 30 May  2 15:47 /etc/gitconfig
[root@irontux etc]# cat /etc/gitconfig
[core]
        editor = /usr/bin/vim
[root@irontux etc]#

[root@irontux ~]# git config --global system.name "My GIT repo"

[root@irontux ~]# cat .gitconfig
[user]
        name = root
        email = root@localhost
[system]
        name = My GIT repo
[root@irontux ~]# git config --list
core.editor=/usr/bin/vim
user.name=root
user.email=root@localhost
system.name=My GIT repo

Git Options
------------

[root@irontux ~]# git --help
usage: git [--version] [--help] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and merge with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

Creating Repo:
-------------

[root@irontux ~]# mkdir gittest
[root@irontux ~]# cd gittest/
[root@irontux gittest]# ll
total 0
[root@irontux gittest]# git init
Initialized empty Git repository in /root/gittest/.git/
[root@irontux gittest]# ll
total 0
[root@irontux gittest]# ls -lart
total 4
dr-xr-x---. 9 root root 4096 Oct 14 21:23 ..
drwxr-xr-x. 3 root root   18 Oct 14 21:23 .
drwxr-xr-x. 7 root root  119 Oct 14 21:23 .git
[root@irontux gittest]# cd .git/
[root@irontux .git]# ll
total 12
drwxr-xr-x. 2 root root   6 Oct 14 21:23 branches
-rw-r--r--. 1 root root  92 Oct 14 21:23 config
-rw-r--r--. 1 root root  73 Oct 14 21:23 description
-rw-r--r--. 1 root root  23 Oct 14 21:23 HEAD
drwxr-xr-x. 2 root root 242 Oct 14 21:23 hooks
drwxr-xr-x. 2 root root  21 Oct 14 21:23 info
drwxr-xr-x. 4 root root  30 Oct 14 21:23 objects
drwxr-xr-x. 4 root root  31 Oct 14 21:23 refs
[root@irontux .git]#

[root@irontux gittest]# git status
# On branch master
#
# Initial commit
#
nothing to commit (create/copy files and use "git add" to track)
[root@irontux gittest]#

[root@irontux gittest]# echo "this is my first test file" > test.txt

[root@irontux gittest]# git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#       test.txt
nothing added to commit but untracked files present (use "git add" to track)
[root@irontux gittest]# git add test.txt

[root@irontux gittest]# git status
# On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use "git rm --cached <file>..." to unstage)
#
#       new file:   test.txt
#

[root@irontux gittest]# git commit test.txt
[master (root-commit) 7c4fea6] this is my first test file
 1 file changed, 1 insertion(+)
 create mode 100644 test.txt
[root@irontux gittest]#

Testing Remove options in GIT:
-----------------------------

[root@irontux ~]# mkdir source
[root@irontux ~]# cd source/
[root@irontux source]# ls
[root@irontux source]# git init

[root@irontux source]# cp /etc/hosts.allow
[root@irontux source]# cp /etc/hosts.deny

[root@irontux source]# git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#       hosts.allow
#       hosts.deny
nothing added to commit but untracked files present (use "git add" to track)

[root@irontux source]# git add hosts.allow hosts.deny
[root@irontux source]# git status
# On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use "git rm --cached <file>..." to unstage)
#
#       new file:   hosts.allow
#       new file:   hosts.deny

[root@irontux source]# ls -la
total 12
drwxr-xr-x.  3 root root   55 Oct 14 23:08 .
dr-xr-x---. 10 root root 4096 Oct 14 23:06 ..
drwxr-xr-x.  7 root root  132 Oct 14 23:08 .git
-rw-r--r--.  1 root root  370 Oct 14 23:07 hosts.allow
-rw-r--r--.  1 root root  460 Oct 14 23:07 hosts.deny

[root@irontux source]# git commit -m "new files"
[master (root-commit) 6888e6a] new files
 2 files changed, 23 insertions(+)
 create mode 100644 hosts.allow
 create mode 100644 hosts.deny

[root@irontux source]# git status
# On branch master
nothing to commit, working directory clean

[root@irontux source]# rm hosts.deny
rm: remove regular file ‘hosts.deny’? y

[root@irontux source]# git status
# On branch master
# Changes not staged for commit:
#   (use "git add/rm <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#       deleted:    hosts.deny
#
no changes added to commit (use "git add" and/or "git commit -a")

[root@irontux source]# git rm hosts.deny
rm 'hosts.deny'

[root@irontux source]# git status
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#       deleted:    hosts.deny
#
[root@irontux source]# git commit
Aborting commit due to empty commit message.

[root@irontux source]# git commit -m "test deletion"
[master 5537f1d] test deletion
 1 file changed, 13 deletions(-)
 delete mode 100644 hosts.deny

[root@irontux source]# git status
# On branch master
nothing to commit, working directory clean
[root@irontux source]#

